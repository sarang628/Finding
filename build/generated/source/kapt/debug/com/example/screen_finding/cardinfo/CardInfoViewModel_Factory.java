// Generated by Dagger (https://dagger.dev).
package com.example.screen_finding.cardinfo;

import com.example.torang_core.repository.FindRepository;
import com.example.torang_core.repository.MapRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CardInfoViewModel_Factory implements Factory<CardInfoViewModel> {
  private final Provider<MapRepository> mapRepositoryProvider;

  private final Provider<FindRepository> findRepositoryProvider;

  public CardInfoViewModel_Factory(Provider<MapRepository> mapRepositoryProvider,
      Provider<FindRepository> findRepositoryProvider) {
    this.mapRepositoryProvider = mapRepositoryProvider;
    this.findRepositoryProvider = findRepositoryProvider;
  }

  @Override
  public CardInfoViewModel get() {
    return newInstance(mapRepositoryProvider.get(), findRepositoryProvider.get());
  }

  public static CardInfoViewModel_Factory create(Provider<MapRepository> mapRepositoryProvider,
      Provider<FindRepository> findRepositoryProvider) {
    return new CardInfoViewModel_Factory(mapRepositoryProvider, findRepositoryProvider);
  }

  public static CardInfoViewModel newInstance(MapRepository mapRepository,
      FindRepository findRepository) {
    return new CardInfoViewModel(mapRepository, findRepository);
  }
}
